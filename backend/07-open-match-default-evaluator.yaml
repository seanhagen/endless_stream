---
# Source: open-match/charts/open-match-customize/templates/customize-configmap.yaml
# Copyright 2019 Google LLC
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

apiVersion: v1
kind: ConfigMap
metadata:
  name: customize-configmap
  namespace: open-match
  annotations:
    chart: open-match-customize-0.0.0-dev
    heritage: Helm
  labels:
    app: open-match-customize
    component: config
    release: open-match
data:
  matchmaker_config_default.yaml: |-
    api:
      functions:
        hostname: "om-function"
        grpcport: "50502"
        httpport: "51502"

      evaluator:
        hostname: "om-evaluator"
        grpcport: "50508"
        httpport: "51508"
  matchmaker_config_override.yaml: |-
    api:
      query:
        hostname: "om-query.open-match.svc.cluster.local"
        grpcport: "50503"
---
# Source: open-match/templates/tests/om-test-service-account.yaml
# Create a service account for open-match-test services.
apiVersion: v1
kind: ServiceAccount
metadata:
  name: open-match-test-service
  namespace: open-match
  annotations:
    chart: open-match-0.9.0
    heritage: Helm
  labels:
    app: open-match
    release: open-match
automountServiceAccountToken: true
---
# Source: open-match/templates/tests/om-test-role.yaml
kind: Role
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: om-test-role
  namespace: open-match
  annotations:
    chart: open-match-0.9.0
    heritage: Helm
  labels:
    app: open-match
    release: open-match
rules:
# Define om-test-role to use om-core-podsecuritypolicy
- apiGroups:
  - extensions
  resources:
  - podsecuritypolicies
  resourceNames:
  - om-core-podsecuritypolicy
  verbs:
  - use
# Grant om-test-role get & list permission for k8s endpoints and pods resources
# Required for e2e in-cluster testing.
- apiGroups:
  - ""
  resources:
  - endpoints
  - pods
  verbs:
  - get
  - list
---
# Source: open-match/templates/tests/om-test-role-binding.yaml
# This applies om-test-role to the open-match-test-service account under the release namespace.
kind: RoleBinding
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: om-test-role-binding
  namespace: open-match
  annotations:
    chart: open-match-0.9.0
    heritage: Helm
  labels:
    app: open-match
    release: open-match
subjects:
- kind: ServiceAccount
  name: open-match-test-service
  namespace: open-match
roleRef:
  kind: Role
  name: om-test-role
  apiGroup: rbac.authorization.k8s.io
---
# Source: open-match/charts/open-match-customize/templates/evaluator.yaml
# Copyright 2019 Google LLC
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

# Ugly workaround to split out MMF and evaluator
# TODO: Reconsider helm chart structure and move things out after v0.8 release
kind: Service
apiVersion: v1
metadata:
  name: om-evaluator
  namespace: open-match
  annotations:
    chart: open-match-customize-0.0.0-dev
    heritage: Helm
  labels:
    app: open-match-customize
    component: evaluator
    release: open-match
spec:
  selector:
    app: open-match-customize
    component: evaluator
    release: open-match
  clusterIP: None
  type: ClusterIP
  ports:
  - name: grpc
    protocol: TCP
    port: 50508
  - name: http
    protocol: TCP
    port: 51508
---
# Source: open-match/charts/open-match-customize/templates/evaluator.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: om-evaluator
  namespace: open-match
  labels:
    app: open-match-customize
    component: evaluator
    release: open-match
spec:
  replicas: 3
  selector:
    matchLabels:
      app: open-match-customize
      component: evaluator
  template:
    metadata:
      namespace: open-match
      annotations:

        chart: open-match-customize-0.0.0-dev
        heritage: Helm
      labels:
        app: open-match-customize
        component: evaluator
        release: open-match
    spec:
      volumes:

        - name: customize-config-volume
          configMap:
            name: customize-configmap
        - name: om-config-volume-default
          configMap:
            name: customize-configmap

      serviceAccountName: open-match-unprivileged-service
      containers:
      - name: om-evaluator
        volumeMounts:

          - name: customize-config-volume
            mountPath: /app/config/override
          - name: om-config-volume-default
            mountPath: /app/config/default

        image: "gcr.io/open-match-public-images/openmatch-evaluator-go-simple:0.9.0"
        ports:
        - name: grpc
          containerPort: 50508
        - name: http
          containerPort: 51508
        imagePullPolicy: Always
        resources:
          limits:
            cpu: 100m
            memory: 100Mi
          requests:
            cpu: 100m
            memory: 100Mi
---
# Source: open-match/charts/open-match-customize/templates/evaluator.yaml
apiVersion: autoscaling/v1
kind: HorizontalPodAutoscaler
metadata:
  name: om-evaluator
  namespace: open-match
  annotations:
    chart: open-match-customize-0.0.0-dev
    heritage: Helm
spec:
  scaleTargetRef:
    apiVersion: apps/v1
    kind: Deployment
    name: om-evaluator
  minReplicas: 1
  maxReplicas: 10
  targetCPUUtilizationPercentage: 80
