// Code generated by protoc-gen-go. DO NOT EDIT.
// source: endless.proto

package grpc

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	_ "google.golang.org//genproto/googleapis/api/annotations"
	grpc "google.golang.org/grpc"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type Updates struct {
	Id                   string   `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Updates) Reset()         { *m = Updates{} }
func (m *Updates) String() string { return proto.CompactTextString(m) }
func (*Updates) ProtoMessage()    {}
func (*Updates) Descriptor() ([]byte, []int) {
	return fileDescriptor_602ff85d9c6c040c, []int{0}
}

func (m *Updates) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Updates.Unmarshal(m, b)
}
func (m *Updates) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Updates.Marshal(b, m, deterministic)
}
func (m *Updates) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Updates.Merge(m, src)
}
func (m *Updates) XXX_Size() int {
	return xxx_messageInfo_Updates.Size(m)
}
func (m *Updates) XXX_DiscardUnknown() {
	xxx_messageInfo_Updates.DiscardUnknown(m)
}

var xxx_messageInfo_Updates proto.InternalMessageInfo

func (m *Updates) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func init() {
	proto.RegisterType((*Updates)(nil), "backend.grpc.Updates")
}

func init() { proto.RegisterFile("endless.proto", fileDescriptor_602ff85d9c6c040c) }

var fileDescriptor_602ff85d9c6c040c = []byte{
	// 189 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x6c, 0xce, 0x31, 0x6b, 0xc3, 0x30,
	0x10, 0x86, 0xe1, 0xca, 0xd0, 0x96, 0x8a, 0xb6, 0x83, 0xa0, 0xd0, 0x9a, 0x0e, 0xc1, 0x93, 0x27,
	0xc9, 0x38, 0x63, 0xb6, 0x2c, 0x21, 0x6b, 0x4c, 0x96, 0x2c, 0xe1, 0x6c, 0x1d, 0xb2, 0x88, 0x2d,
	0x09, 0xe9, 0x92, 0xdf, 0x1f, 0x12, 0x34, 0x64, 0xc8, 0x7a, 0xdc, 0xf7, 0xf0, 0xf2, 0x2f, 0x74,
	0x7a, 0xc2, 0x94, 0x64, 0x88, 0x9e, 0xbc, 0xf8, 0xec, 0x61, 0x38, 0xa1, 0xd3, 0xd2, 0xc4, 0x30,
	0x94, 0xff, 0xc6, 0x7b, 0x33, 0xa1, 0x82, 0x60, 0x15, 0x38, 0xe7, 0x09, 0xc8, 0x7a, 0x97, 0x7f,
	0xab, 0x3f, 0xfe, 0xbe, 0x0f, 0x1a, 0x08, 0x93, 0xf8, 0xe6, 0x85, 0xd5, 0xbf, 0x6c, 0xc1, 0xea,
	0x8f, 0x5d, 0x61, 0x75, 0xbb, 0xe5, 0x7c, 0x03, 0x33, 0x76, 0x18, 0x2f, 0x18, 0xc5, 0x8a, 0xbf,
	0x76, 0x04, 0x84, 0xe2, 0x47, 0x3e, 0xf2, 0x32, 0xaf, 0xcb, 0xe7, 0xe7, 0xea, 0xa5, 0x66, 0x0d,
	0x5b, 0xb7, 0x87, 0xc6, 0x58, 0x1a, 0xcf, 0xbd, 0x1c, 0xfc, 0xac, 0x12, 0x82, 0x1b, 0xc1, 0xa0,
	0x53, 0xb9, 0xfb, 0x98, 0x28, 0x22, 0xcc, 0x2a, 0x0b, 0xea, 0x26, 0xf4, 0x6f, 0xf7, 0xc0, 0xe5,
	0x35, 0x00, 0x00, 0xff, 0xff, 0x3f, 0x96, 0x87, 0x5c, 0xdd, 0x00, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// GameServerClient is the client API for GameServer service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type GameServerClient interface {
	State(ctx context.Context, opts ...grpc.CallOption) (GameServer_StateClient, error)
}

type gameServerClient struct {
	cc *grpc.ClientConn
}

func NewGameServerClient(cc *grpc.ClientConn) GameServerClient {
	return &gameServerClient{cc}
}

func (c *gameServerClient) State(ctx context.Context, opts ...grpc.CallOption) (GameServer_StateClient, error) {
	stream, err := c.cc.NewStream(ctx, &_GameServer_serviceDesc.Streams[0], "/backend.grpc.GameServer/State", opts...)
	if err != nil {
		return nil, err
	}
	x := &gameServerStateClient{stream}
	return x, nil
}

type GameServer_StateClient interface {
	Send(*Updates) error
	Recv() (*Updates, error)
	grpc.ClientStream
}

type gameServerStateClient struct {
	grpc.ClientStream
}

func (x *gameServerStateClient) Send(m *Updates) error {
	return x.ClientStream.SendMsg(m)
}

func (x *gameServerStateClient) Recv() (*Updates, error) {
	m := new(Updates)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

// GameServerServer is the server API for GameServer service.
type GameServerServer interface {
	State(GameServer_StateServer) error
}

func RegisterGameServerServer(s *grpc.Server, srv GameServerServer) {
	s.RegisterService(&_GameServer_serviceDesc, srv)
}

func _GameServer_State_Handler(srv interface{}, stream grpc.ServerStream) error {
	return srv.(GameServerServer).State(&gameServerStateServer{stream})
}

type GameServer_StateServer interface {
	Send(*Updates) error
	Recv() (*Updates, error)
	grpc.ServerStream
}

type gameServerStateServer struct {
	grpc.ServerStream
}

func (x *gameServerStateServer) Send(m *Updates) error {
	return x.ServerStream.SendMsg(m)
}

func (x *gameServerStateServer) Recv() (*Updates, error) {
	m := new(Updates)
	if err := x.ServerStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

var _GameServer_serviceDesc = grpc.ServiceDesc{
	ServiceName: "backend.grpc.GameServer",
	HandlerType: (*GameServerServer)(nil),
	Methods:     []grpc.MethodDesc{},
	Streams: []grpc.StreamDesc{
		{
			StreamName:    "State",
			Handler:       _GameServer_State_Handler,
			ServerStreams: true,
			ClientStreams: true,
		},
	},
	Metadata: "endless.proto",
}
