// Code generated by protoc-gen-go. DO NOT EDIT.
// source: util.proto

package endless

import (
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

// Type is used to indicate what kind of monster the characters are facing,
// and is used by some items or attacks.
type Type int32

const (
	Type_None         Type = 0
	Type_Animal       Type = 10
	Type_Bird         Type = 11
	Type_Fish         Type = 12
	Type_Rat          Type = 13
	Type_Wolf         Type = 14
	Type_Insect       Type = 15
	Type_Spider       Type = 16
	Type_Dinosaur     Type = 20
	Type_Dragon       Type = 30
	Type_Abomination  Type = 40
	Type_Eye          Type = 50
	Type_Fae          Type = 60
	Type_Plant        Type = 70
	Type_Fungus       Type = 71
	Type_Goblin       Type = 80
	Type_Ogre         Type = 81
	Type_Troll        Type = 82
	Type_Construct    Type = 90
	Type_Golem        Type = 91
	Type_Hybrid       Type = 92
	Type_Humanoid     Type = 100
	Type_Human        Type = 101
	Type_Shapeshifter Type = 102
	Type_Witch        Type = 103
	Type_Naga         Type = 110
	Type_Slime        Type = 120
	Type_Undead       Type = 130
	Type_Spirit       Type = 131
	Type_Vampire      Type = 132
	Type_Eldritch     Type = 140
)

var Type_name = map[int32]string{
	0:   "None",
	10:  "Animal",
	11:  "Bird",
	12:  "Fish",
	13:  "Rat",
	14:  "Wolf",
	15:  "Insect",
	16:  "Spider",
	20:  "Dinosaur",
	30:  "Dragon",
	40:  "Abomination",
	50:  "Eye",
	60:  "Fae",
	70:  "Plant",
	71:  "Fungus",
	80:  "Goblin",
	81:  "Ogre",
	82:  "Troll",
	90:  "Construct",
	91:  "Golem",
	92:  "Hybrid",
	100: "Humanoid",
	101: "Human",
	102: "Shapeshifter",
	103: "Witch",
	110: "Naga",
	120: "Slime",
	130: "Undead",
	131: "Spirit",
	132: "Vampire",
	140: "Eldritch",
}

var Type_value = map[string]int32{
	"None":         0,
	"Animal":       10,
	"Bird":         11,
	"Fish":         12,
	"Rat":          13,
	"Wolf":         14,
	"Insect":       15,
	"Spider":       16,
	"Dinosaur":     20,
	"Dragon":       30,
	"Abomination":  40,
	"Eye":          50,
	"Fae":          60,
	"Plant":        70,
	"Fungus":       71,
	"Goblin":       80,
	"Ogre":         81,
	"Troll":        82,
	"Construct":    90,
	"Golem":        91,
	"Hybrid":       92,
	"Humanoid":     100,
	"Human":        101,
	"Shapeshifter": 102,
	"Witch":        103,
	"Naga":         110,
	"Slime":        120,
	"Undead":       130,
	"Spirit":       131,
	"Vampire":      132,
	"Eldritch":     140,
}

func (x Type) String() string {
	return proto.EnumName(Type_name, int32(x))
}

func (Type) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_170ba741606d8a4c, []int{0}
}

// CharacterClass is an enum that represents what class a character is
type Class int32

const (
	Class_Unknown  Class = 0
	Class_Status   Class = -2
	Class_Audience Class = -1
	Class_Fighter  Class = 10
	Class_Ranger   Class = 20
	Class_Cleric   Class = 30
	Class_Wizard   Class = 40
)

var Class_name = map[int32]string{
	0:  "Unknown",
	-2: "Status",
	-1: "Audience",
	10: "Fighter",
	20: "Ranger",
	30: "Cleric",
	40: "Wizard",
}

var Class_value = map[string]int32{
	"Unknown":  0,
	"Status":   -2,
	"Audience": -1,
	"Fighter":  10,
	"Ranger":   20,
	"Cleric":   30,
	"Wizard":   40,
}

func (x Class) String() string {
	return proto.EnumName(Class_name, int32(x))
}

func (Class) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_170ba741606d8a4c, []int{1}
}

type StatusEffect int32

const (
	StatusEffect_Normal     StatusEffect = 0
	StatusEffect_Poisoned   StatusEffect = 1
	StatusEffect_Stunned    StatusEffect = 2
	StatusEffect_Prone      StatusEffect = 3
	StatusEffect_Bleeding   StatusEffect = 4
	StatusEffect_Frenzied   StatusEffect = 5
	StatusEffect_Invisible  StatusEffect = 6
	StatusEffect_Invincible StatusEffect = 7
)

var StatusEffect_name = map[int32]string{
	0: "Normal",
	1: "Poisoned",
	2: "Stunned",
	3: "Prone",
	4: "Bleeding",
	5: "Frenzied",
	6: "Invisible",
	7: "Invincible",
}

var StatusEffect_value = map[string]int32{
	"Normal":     0,
	"Poisoned":   1,
	"Stunned":    2,
	"Prone":      3,
	"Bleeding":   4,
	"Frenzied":   5,
	"Invisible":  6,
	"Invincible": 7,
}

func (x StatusEffect) String() string {
	return proto.EnumName(StatusEffect_name, int32(x))
}

func (StatusEffect) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_170ba741606d8a4c, []int{2}
}

// Level is used to control what the UI displays for the current wave via textures/etc
type Level int32

const (
	Level_Blank   Level = 0
	Level_Forest  Level = 1
	Level_Cave    Level = 2
	Level_Dungeon Level = 3
	Level_Ice     Level = 4
	Level_Fire    Level = 5
	Level_Void    Level = 6
)

var Level_name = map[int32]string{
	0: "Blank",
	1: "Forest",
	2: "Cave",
	3: "Dungeon",
	4: "Ice",
	5: "Fire",
	6: "Void",
}

var Level_value = map[string]int32{
	"Blank":   0,
	"Forest":  1,
	"Cave":    2,
	"Dungeon": 3,
	"Ice":     4,
	"Fire":    5,
	"Void":    6,
}

func (x Level) String() string {
	return proto.EnumName(Level_name, int32(x))
}

func (Level) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_170ba741606d8a4c, []int{3}
}

// Display is an enum with the various screens
type Display int32

const (
	Display_ScreenLoading    Display = 0
	Display_ScreenCharSelect Display = 1
	Display_ScreenWave       Display = 2
	Display_ScreenVictory    Display = 3
	Display_ScreenDead       Display = 4
	Display_ScreenGameOver   Display = 5
	Display_ScreenStore      Display = 6
	Display_ScreenNewWave    Display = 7
)

var Display_name = map[int32]string{
	0: "ScreenLoading",
	1: "ScreenCharSelect",
	2: "ScreenWave",
	3: "ScreenVictory",
	4: "ScreenDead",
	5: "ScreenGameOver",
	6: "ScreenStore",
	7: "ScreenNewWave",
}

var Display_value = map[string]int32{
	"ScreenLoading":    0,
	"ScreenCharSelect": 1,
	"ScreenWave":       2,
	"ScreenVictory":    3,
	"ScreenDead":       4,
	"ScreenGameOver":   5,
	"ScreenStore":      6,
	"ScreenNewWave":    7,
}

func (x Display) String() string {
	return proto.EnumName(Display_name, int32(x))
}

func (Display) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_170ba741606d8a4c, []int{4}
}

func init() {
	proto.RegisterEnum("endless.stream.v1.Type", Type_name, Type_value)
	proto.RegisterEnum("endless.stream.v1.Class", Class_name, Class_value)
	proto.RegisterEnum("endless.stream.v1.StatusEffect", StatusEffect_name, StatusEffect_value)
	proto.RegisterEnum("endless.stream.v1.Level", Level_name, Level_value)
	proto.RegisterEnum("endless.stream.v1.Display", Display_name, Display_value)
}

func init() { proto.RegisterFile("util.proto", fileDescriptor_170ba741606d8a4c) }

var fileDescriptor_170ba741606d8a4c = []byte{
	// 657 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x44, 0x53, 0xcf, 0x4f, 0xeb, 0x46,
	0x10, 0x8e, 0xc9, 0xcf, 0xb7, 0x49, 0x78, 0xf3, 0xb6, 0xaf, 0xd7, 0x77, 0x46, 0x39, 0x04, 0xb5,
	0xa8, 0xb7, 0x5e, 0x48, 0x42, 0x02, 0x12, 0x02, 0x1a, 0x03, 0x91, 0x68, 0xa5, 0x6a, 0x63, 0x4f,
	0xec, 0x15, 0xeb, 0xd9, 0x74, 0x77, 0x1d, 0x1a, 0x7a, 0x6b, 0x7b, 0xec, 0xbf, 0xd0, 0xff, 0xb3,
	0xa7, 0x52, 0x8d, 0x4d, 0xc1, 0xa7, 0xf9, 0xbe, 0x99, 0xf9, 0x3c, 0x3b, 0x3f, 0x84, 0x28, 0x83,
	0x36, 0xe3, 0xad, 0xb3, 0xc1, 0xca, 0x4f, 0x48, 0xa9, 0x41, 0xef, 0xc7, 0x3e, 0x38, 0x54, 0xc5,
	0x78, 0xf7, 0xcd, 0xe8, 0x9f, 0x03, 0xd1, 0xba, 0xdd, 0x6f, 0x51, 0xf6, 0x44, 0xeb, 0xca, 0x12,
	0x42, 0x43, 0x0a, 0xd1, 0x39, 0x25, 0x5d, 0x28, 0x03, 0x82, 0xd9, 0x89, 0x76, 0x29, 0xf4, 0xd9,
	0x9a, 0x6b, 0x9f, 0xc3, 0x40, 0x76, 0x45, 0x73, 0xa9, 0x02, 0x0c, 0x99, 0x5a, 0x59, 0xb3, 0x81,
	0x43, 0x4e, 0xb9, 0x20, 0x8f, 0x49, 0x80, 0x8f, 0x6c, 0xc7, 0x5b, 0x9d, 0xa2, 0x03, 0x90, 0x03,
	0xd1, 0x9b, 0x69, 0xb2, 0x5e, 0x95, 0x0e, 0x3e, 0xb3, 0x67, 0xe6, 0x54, 0x66, 0x09, 0xbe, 0xc8,
	0x8f, 0xa2, 0x7f, 0xba, 0xb6, 0x85, 0x26, 0x15, 0xb4, 0x25, 0x38, 0x62, 0xd5, 0xb3, 0x3d, 0xc2,
	0xb7, 0x6c, 0xcc, 0x15, 0xc2, 0xf7, 0xf2, 0x83, 0x68, 0xdf, 0x18, 0x45, 0x01, 0xe6, 0x9c, 0x39,
	0x2f, 0x29, 0x2b, 0x3d, 0x2c, 0xd8, 0x5e, 0xd8, 0xb5, 0xd1, 0x04, 0x37, 0x5c, 0xc1, 0x75, 0xe6,
	0x10, 0x7e, 0xe0, 0xe0, 0x5b, 0x67, 0x8d, 0x81, 0xa5, 0x1c, 0x8a, 0x0f, 0x53, 0x4b, 0x3e, 0xb8,
	0x32, 0x09, 0xf0, 0xc0, 0x9e, 0x85, 0x35, 0x58, 0xc0, 0x8f, 0x9c, 0x7a, 0xbe, 0x5f, 0x3b, 0x9d,
	0xc2, 0x4f, 0x5c, 0xda, 0x79, 0x59, 0x28, 0xb2, 0x3a, 0x85, 0x94, 0x83, 0x2a, 0x04, 0x28, 0x41,
	0x0c, 0xe2, 0x5c, 0x6d, 0xd1, 0xe7, 0x7a, 0x13, 0xd0, 0xc1, 0x86, 0x9d, 0x2b, 0x1d, 0x92, 0x1c,
	0xb2, 0xaa, 0x4b, 0x2a, 0x53, 0x40, 0x4c, 0xc6, 0x46, 0x17, 0x08, 0xbf, 0xca, 0xbe, 0xe8, 0xdc,
	0x51, 0x8a, 0x2a, 0x85, 0xdf, 0x23, 0x06, 0xf1, 0x56, 0x3b, 0x1d, 0xe0, 0x8f, 0x48, 0x0e, 0x44,
	0xf7, 0x5e, 0x15, 0x5b, 0xed, 0x10, 0xfe, 0x8c, 0xe4, 0x50, 0xf4, 0xce, 0x4c, 0xea, 0x2a, 0xa9,
	0xbf, 0xa2, 0xd1, 0x2f, 0xa2, 0x3d, 0x35, 0xca, 0x7b, 0xd9, 0x17, 0xdd, 0x3b, 0x7a, 0x24, 0xfb,
	0x44, 0xd0, 0x90, 0x5f, 0x89, 0x4e, 0x1c, 0x54, 0x28, 0x3d, 0xfc, 0xfb, 0xf2, 0xfa, 0x45, 0xf2,
	0x6b, 0xd1, 0x3b, 0x2d, 0x53, 0x8d, 0x94, 0x20, 0xbc, 0xbc, 0xd3, 0x7d, 0xd1, 0x9d, 0xeb, 0x2c,
	0xe7, 0x2a, 0x05, 0x3f, 0x6e, 0xa9, 0x28, 0xc3, 0xd7, 0x4e, 0x4f, 0x0d, 0x3a, 0x9d, 0xc0, 0x17,
	0xb6, 0x57, 0xfa, 0x59, 0xb9, 0x14, 0x8e, 0x46, 0xbf, 0x89, 0x41, 0x2d, 0x7e, 0xb6, 0xd9, 0x60,
	0x12, 0xd8, 0x77, 0x65, 0x1d, 0x8f, 0xba, 0xc1, 0x0d, 0xb9, 0xb1, 0xda, 0x5b, 0xc2, 0x14, 0x2a,
	0xe9, 0x38, 0x94, 0xc4, 0xe0, 0xa0, 0x9a, 0x84, 0xe3, 0xe5, 0x68, 0x72, 0xd4, 0xc4, 0x20, 0xa6,
	0x9a, 0x32, 0x68, 0x31, 0x9a, 0x3b, 0xa4, 0x67, 0x8d, 0x29, 0xb4, 0xb9, 0xf1, 0x17, 0xb4, 0xd3,
	0x5e, 0xaf, 0x0d, 0x42, 0x47, 0x1e, 0x0a, 0xc1, 0x90, 0x92, 0x0a, 0x77, 0x47, 0x4b, 0xd1, 0xbe,
	0xc4, 0x1d, 0x1a, 0x96, 0x9b, 0x18, 0x45, 0x8f, 0xf5, 0xae, 0xcd, 0xad, 0x43, 0x1f, 0x20, 0xe2,
	0xde, 0x4e, 0xd5, 0x0e, 0xe1, 0x80, 0x7f, 0x3e, 0x2b, 0x29, 0x43, 0x4b, 0xd0, 0xe4, 0x7d, 0xb8,
	0x48, 0x10, 0x5a, 0xf5, 0x06, 0x3a, 0x84, 0x36, 0x5b, 0xf7, 0x3c, 0xb7, 0xce, 0xe8, 0xef, 0x48,
	0x74, 0x67, 0xda, 0x6f, 0x8d, 0xda, 0xcb, 0x4f, 0x62, 0x18, 0x27, 0x0e, 0x91, 0x2e, 0xad, 0xaa,
	0xea, 0x6b, 0xc8, 0xcf, 0x02, 0x6a, 0x6a, 0x9a, 0x2b, 0x17, 0xa3, 0xe1, 0x0d, 0x8d, 0xb8, 0xb0,
	0x9a, 0x5d, 0xd5, 0xbf, 0x7b, 0x4b, 0xbc, 0xd7, 0x49, 0xb0, 0x6e, 0x0f, 0xcd, 0xf7, 0x90, 0x19,
	0x8f, 0xb5, 0x25, 0xa5, 0x38, 0xac, 0xf1, 0x42, 0x15, 0x78, 0xbd, 0x43, 0x07, 0x6d, 0x5e, 0xe1,
	0x9a, 0x8b, 0x83, 0x75, 0xfc, 0xe0, 0x37, 0x9d, 0x2b, 0x7c, 0xaa, 0xa4, 0xbb, 0x93, 0xef, 0x1e,
	0x4e, 0x32, 0x1d, 0xf2, 0x72, 0x3d, 0x4e, 0x6c, 0x71, 0xec, 0x51, 0x51, 0xae, 0x32, 0xa4, 0xe3,
	0xd7, 0x43, 0xfc, 0xb9, 0x3e, 0xc4, 0xe3, 0xb5, 0x4a, 0x1e, 0x91, 0xd2, 0xff, 0xe9, 0x75, 0xa7,
	0xba, 0xd7, 0x93, 0xff, 0x02, 0x00, 0x00, 0xff, 0xff, 0x6e, 0xcc, 0x3b, 0x9a, 0xbd, 0x03, 0x00,
	0x00,
}
