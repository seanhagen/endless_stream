// @generated by protoc-gen-es v1.9.0
// @generated from file common/game.proto (package endless, syntax proto3)
/* eslint-disable */
// @ts-nocheck

import type { BinaryReadOptions, FieldList, JsonReadOptions, JsonValue, PartialMessage, PlainMessage, Timestamp } from "@bufbuild/protobuf";
import { Message, proto3 } from "@bufbuild/protobuf";
import type { Tile, Tileset } from "./tile_pb.js";
import type { Log } from "./logs_pb.js";

/**
 * @generated from message endless.Ping
 */
export declare class Ping extends Message<Ping> {
  constructor(data?: PartialMessage<Ping>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "endless.Ping";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): Ping;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): Ping;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): Ping;

  static equals(a: Ping | PlainMessage<Ping> | undefined, b: Ping | PlainMessage<Ping> | undefined): boolean;
}

/**
 * @generated from message endless.Pong
 */
export declare class Pong extends Message<Pong> {
  constructor(data?: PartialMessage<Pong>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "endless.Pong";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): Pong;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): Pong;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): Pong;

  static equals(a: Pong | PlainMessage<Pong> | undefined, b: Pong | PlainMessage<Pong> | undefined): boolean;
}

/**
 * Level is a single layer of tiles laid out to create a level.
 *
 * @generated from message endless.Level
 */
export declare class Level extends Message<Level> {
  /**
   * Tiles is an array of all the tiles laid out on a level.
   *
   * @generated from field: repeated endless.Tile tiles = 1;
   */
  tiles: Tile[];

  /**
   * Tileset tells Godot what tileset to use.
   *
   * @generated from field: endless.Tileset tileset = 2;
   */
  tileset: Tileset;

  constructor(data?: PartialMessage<Level>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "endless.Level";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): Level;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): Level;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): Level;

  static equals(a: Level | PlainMessage<Level> | undefined, b: Level | PlainMessage<Level> | undefined): boolean;
}

/**
 * @generated from message endless.Heartbeat
 */
export declare class Heartbeat extends Message<Heartbeat> {
  /**
   * @generated from field: google.protobuf.Timestamp beat = 1;
   */
  beat?: Timestamp;

  constructor(data?: PartialMessage<Heartbeat>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "endless.Heartbeat";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): Heartbeat;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): Heartbeat;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): Heartbeat;

  static equals(a: Heartbeat | PlainMessage<Heartbeat> | undefined, b: Heartbeat | PlainMessage<Heartbeat> | undefined): boolean;
}

/**
 * @generated from message endless.GameRequest
 */
export declare class GameRequest extends Message<GameRequest> {
  /**
   * @generated from field: string client_id = 1;
   */
  clientId: string;

  /**
   * @generated from oneof endless.GameRequest.request
   */
  request: {
    /**
     * @generated from field: endless.Ping ping = 100;
     */
    value: Ping;
    case: "ping";
  } | { case: undefined; value?: undefined };

  constructor(data?: PartialMessage<GameRequest>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "endless.GameRequest";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): GameRequest;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): GameRequest;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): GameRequest;

  static equals(a: GameRequest | PlainMessage<GameRequest> | undefined, b: GameRequest | PlainMessage<GameRequest> | undefined): boolean;
}

/**
 * @generated from message endless.GameResponse
 */
export declare class GameResponse extends Message<GameResponse> {
  /**
   * @generated from field: string server_id = 1;
   */
  serverId: string;

  /**
   * @generated from oneof endless.GameResponse.message
   */
  message: {
    /**
     * @generated from field: endless.Heartbeat heartbeat = 2;
     */
    value: Heartbeat;
    case: "heartbeat";
  } | {
    /**
     * @generated from field: endless.Log log = 3;
     */
    value: Log;
    case: "log";
  } | {
    /**
     * @generated from field: endless.Level level = 5;
     */
    value: Level;
    case: "level";
  } | {
    /**
     * @generated from field: endless.Pong pong = 100;
     */
    value: Pong;
    case: "pong";
  } | { case: undefined; value?: undefined };

  constructor(data?: PartialMessage<GameResponse>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "endless.GameResponse";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): GameResponse;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): GameResponse;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): GameResponse;

  static equals(a: GameResponse | PlainMessage<GameResponse> | undefined, b: GameResponse | PlainMessage<GameResponse> | undefined): boolean;
}
