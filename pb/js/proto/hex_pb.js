// @generated by protoc-gen-es v1.8.0
// @generated from file proto/hex.proto (package endless, syntax proto3)
/* eslint-disable */
// @ts-nocheck

import { proto3, Timestamp } from "@bufbuild/protobuf";

/**
 * Type defines whether the tile is empty, a floor tile, or a wall tile.
 *
 * @generated from enum endless.Type
 */
export const Type = /*@__PURE__*/ proto3.makeEnum(
  "endless.Type",
  [
    {no: 0, name: "Empty"},
    {no: 1, name: "Floor"},
    {no: 2, name: "Wall"},
  ],
);

/**
 * Tileset defines what tileset to use in Godot.
 *
 * @generated from enum endless.Tileset
 */
export const Tileset = /*@__PURE__*/ proto3.makeEnum(
  "endless.Tileset",
  [
    {no: 0, name: "Dungeon"},
    {no: 1, name: "Woods"},
  ],
);

/**
 * @generated from enum endless.LogLevel
 */
export const LogLevel = /*@__PURE__*/ proto3.makeEnum(
  "endless.LogLevel",
  [
    {no: 0, name: "Info"},
    {no: -1, name: "Debug"},
    {no: 2, name: "Warn"},
    {no: 3, name: "Error"},
    {no: 4, name: "Fatal"},
  ],
);

/**
 * @generated from enum endless.LogSource
 */
export const LogSource = /*@__PURE__*/ proto3.makeEnum(
  "endless.LogSource",
  [
    {no: 0, name: "Server"},
    {no: 100, name: "Player"},
    {no: 200, name: "Game"},
  ],
);

/**
 * @generated from enum endless.Result
 */
export const Result = /*@__PURE__*/ proto3.makeEnum(
  "endless.Result",
  [
    {no: 0, name: "Unknown"},
    {no: 1, name: "Failure"},
    {no: 2, name: "Success"},
  ],
);

/**
 * Coordinate is the x,y location in the world for a tile.
 *
 * @generated from message endless.Coordinate
 */
export const Coordinate = /*@__PURE__*/ proto3.makeMessageType(
  "endless.Coordinate",
  () => [
    { no: 1, name: "x", kind: "scalar", T: 5 /* ScalarType.INT32 */ },
    { no: 2, name: "y", kind: "scalar", T: 5 /* ScalarType.INT32 */ },
  ],
);

/**
 * Tile is a single tile within the world.
 *
 * @generated from message endless.Tile
 */
export const Tile = /*@__PURE__*/ proto3.makeMessageType(
  "endless.Tile",
  () => [
    { no: 1, name: "type", kind: "enum", T: proto3.getEnumType(Type) },
    { no: 2, name: "coords", kind: "message", T: Coordinate },
  ],
);

/**
 * Level is a single layer of tiles laid out to create a level.
 *
 * @generated from message endless.Level
 */
export const Level = /*@__PURE__*/ proto3.makeMessageType(
  "endless.Level",
  () => [
    { no: 1, name: "tiles", kind: "message", T: Tile, repeated: true },
    { no: 2, name: "tileset", kind: "enum", T: proto3.getEnumType(Tileset) },
  ],
);

/**
 * @generated from message endless.Log
 */
export const Log = /*@__PURE__*/ proto3.makeMessageType(
  "endless.Log",
  () => [
    { no: 1, name: "msg", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "at", kind: "message", T: Timestamp },
    { no: 3, name: "level", kind: "enum", T: proto3.getEnumType(LogLevel) },
    { no: 4, name: "source", kind: "enum", T: proto3.getEnumType(LogSource) },
  ],
);

/**
 * @generated from message endless.InfoRequest
 */
export const InfoRequest = /*@__PURE__*/ proto3.makeMessageType(
  "endless.InfoRequest",
  [],
);

/**
 * @generated from message endless.InfoResponse
 */
export const InfoResponse = /*@__PURE__*/ proto3.makeMessageType(
  "endless.InfoResponse",
  () => [
    { no: 1, name: "version", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "build_date", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ],
);

/**
 * @generated from message endless.GetLevel
 */
export const GetLevel = /*@__PURE__*/ proto3.makeMessageType(
  "endless.GetLevel",
  [],
);

/**
 * @generated from message endless.GameRequest
 */
export const GameRequest = /*@__PURE__*/ proto3.makeMessageType(
  "endless.GameRequest",
  () => [
    { no: 1, name: "client_id", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "info", kind: "message", T: InfoRequest, oneof: "request" },
    { no: 3, name: "get_level", kind: "message", T: GetLevel, oneof: "request" },
  ],
);

/**
 * @generated from message endless.GameResponse
 */
export const GameResponse = /*@__PURE__*/ proto3.makeMessageType(
  "endless.GameResponse",
  () => [
    { no: 1, name: "server_id", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "log", kind: "message", T: Log, oneof: "msesage" },
    { no: 3, name: "info", kind: "message", T: InfoResponse, oneof: "msesage" },
    { no: 4, name: "level", kind: "message", T: Level, oneof: "msesage" },
  ],
);

/**
 * @generated from message endless.AddTile
 */
export const AddTile = /*@__PURE__*/ proto3.makeMessageType(
  "endless.AddTile",
  () => [
    { no: 1, name: "tile", kind: "message", T: Tile },
  ],
);

/**
 * @generated from message endless.RemoveTile
 */
export const RemoveTile = /*@__PURE__*/ proto3.makeMessageType(
  "endless.RemoveTile",
  () => [
    { no: 1, name: "coords", kind: "message", T: Coordinate },
  ],
);

/**
 * @generated from message endless.AdminRequest
 */
export const AdminRequest = /*@__PURE__*/ proto3.makeMessageType(
  "endless.AdminRequest",
  () => [
    { no: 1, name: "client_id", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "add_tile", kind: "message", T: AddTile, oneof: "request" },
    { no: 3, name: "remove_tile", kind: "message", T: RemoveTile, oneof: "request" },
  ],
);

/**
 * @generated from message endless.AdminResponse
 */
export const AdminResponse = /*@__PURE__*/ proto3.makeMessageType(
  "endless.AdminResponse",
  () => [
    { no: 1, name: "server_id", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "log", kind: "message", T: Log },
    { no: 3, name: "result", kind: "enum", T: proto3.getEnumType(Result) },
  ],
);

