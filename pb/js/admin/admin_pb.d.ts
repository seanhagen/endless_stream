// @generated by protoc-gen-es v1.9.0
// @generated from file admin/admin.proto (package endless, syntax proto3)
/* eslint-disable */
// @ts-nocheck

import type { BinaryReadOptions, FieldList, JsonReadOptions, JsonValue, PartialMessage, PlainMessage } from "@bufbuild/protobuf";
import { Message, proto3 } from "@bufbuild/protobuf";
import type { Coordinate, Tile } from "../common/tile_pb.js";
import type { Log } from "../common/logs_pb.js";

/**
 * @generated from enum endless.Result
 */
export declare enum Result {
  /**
   * @generated from enum value: Unknown = 0;
   */
  Unknown = 0,

  /**
   * @generated from enum value: Failure = 1;
   */
  Failure = 1,

  /**
   * @generated from enum value: Success = 2;
   */
  Success = 2,
}

/**
 * @generated from message endless.AddTile
 */
export declare class AddTile extends Message<AddTile> {
  /**
   * @generated from field: endless.Tile tile = 1;
   */
  tile?: Tile;

  constructor(data?: PartialMessage<AddTile>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "endless.AddTile";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): AddTile;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): AddTile;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): AddTile;

  static equals(a: AddTile | PlainMessage<AddTile> | undefined, b: AddTile | PlainMessage<AddTile> | undefined): boolean;
}

/**
 * @generated from message endless.RemoveTile
 */
export declare class RemoveTile extends Message<RemoveTile> {
  /**
   * @generated from field: endless.Coordinate coords = 1;
   */
  coords?: Coordinate;

  constructor(data?: PartialMessage<RemoveTile>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "endless.RemoveTile";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): RemoveTile;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): RemoveTile;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): RemoveTile;

  static equals(a: RemoveTile | PlainMessage<RemoveTile> | undefined, b: RemoveTile | PlainMessage<RemoveTile> | undefined): boolean;
}

/**
 * @generated from message endless.AdminRequest
 */
export declare class AdminRequest extends Message<AdminRequest> {
  /**
   * @generated from field: string client_id = 1;
   */
  clientId: string;

  /**
   * @generated from oneof endless.AdminRequest.request
   */
  request: {
    /**
     * @generated from field: endless.AddTile add_tile = 2;
     */
    value: AddTile;
    case: "addTile";
  } | {
    /**
     * @generated from field: endless.RemoveTile remove_tile = 3;
     */
    value: RemoveTile;
    case: "removeTile";
  } | { case: undefined; value?: undefined };

  constructor(data?: PartialMessage<AdminRequest>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "endless.AdminRequest";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): AdminRequest;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): AdminRequest;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): AdminRequest;

  static equals(a: AdminRequest | PlainMessage<AdminRequest> | undefined, b: AdminRequest | PlainMessage<AdminRequest> | undefined): boolean;
}

/**
 * @generated from message endless.AdminResponse
 */
export declare class AdminResponse extends Message<AdminResponse> {
  /**
   * @generated from field: string server_id = 1;
   */
  serverId: string;

  /**
   * @generated from field: endless.Log log = 2;
   */
  log?: Log;

  /**
   * @generated from field: endless.Result result = 3;
   */
  result: Result;

  constructor(data?: PartialMessage<AdminResponse>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "endless.AdminResponse";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): AdminResponse;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): AdminResponse;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): AdminResponse;

  static equals(a: AdminResponse | PlainMessage<AdminResponse> | undefined, b: AdminResponse | PlainMessage<AdminResponse> | undefined): boolean;
}
