syntax = "proto3";
package endless;
option go_package = "github.com/seanhagen/endless_stream/protos/go";

import "google/protobuf/timestamp.proto";

// Type defines whether the tile is empty, a floor tile, or a wall tile.
enum Type {
  // Empty is a tile without anything in it.
  Empty = 0;
  // Floor is a tile that can be walked on.
  Floor = 1;
  // Wall is a tile that blocks movement and line-of-sight.
  Wall = 2;
};

// Coordinate is the x,y location in the world for a tile.
message Coordinate {
  int32 x = 1;
  int32 y = 2;
};

// Tile is a single tile within the world.
message Tile {
  // Type defines whether the tile is empty, a floor, or a wall.
  Type type = 1;
  // Coords defines the position of the tile within the world.
  Coordinate coords = 2;
};

enum Tileset {
  Dungeon = 0;
  Woods = 1;
};

// Level is a single layer of tiles laid out to create a level.
message Level {
  // Tiles is an array of all the tiles laid out on a level.
  repeated Tile tiles = 1;

  // Tileset tells Godot what tileset to use.
  Tileset tileset = 2;
};

enum LogLevel {
  Info = 0;
  Debug = -1;
  Warn = 2;
  Error = 3;
  Fatal = 4;
};

enum LogSource {
  Server = 0;
  Player = 100;
  Game = 200;
};

message Log {
  string msg = 1;
  google.protobuf.Timestamp at = 2;
  LogLevel level = 3;
  LogSource source = 4;
};

message InfoRequest {};

message InfoResponse {
  string version = 1;
  string build_date = 2;
};

message GetLevel {};

message GameRequest {
  string client_id = 1;

  oneof request {
    InfoRequest info = 2;
    GetLevel get_level = 3;
  }
};

message GameResponse {
  string server_id = 1;

  oneof msesage {
    Log log = 2;
    InfoResponse info = 3;
    Level level = 4;
  }
};

message AddTile {
  Tile tile = 1;
};

message RemoveTile {
  Coordinate coords = 1;
};

message AdminRequest {
  string client_id = 1;

  oneof request {
    AddTile add_tile = 2;
    RemoveTile remove_tile = 3;
  }
};

enum Result {
  Unknown = 0;
  Failure = 1;
  Success = 2;
};

message AdminResponse {
  string server_id = 1;
  Log log = 2;
  Result result = 3;
};
